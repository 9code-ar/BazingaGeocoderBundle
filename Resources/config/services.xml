<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="geocoder_bundle.geocoder.class">_9Code\Geocoder\ProviderAggregator</parameter>
        <parameter key="geocoder_bundle.geocoder.loggable_class">_9Code\GeocoderBundle\Geocoder\LoggableGeocoder</parameter>
        <parameter key="geocoder_bundle.geocoder.default_adapter.class">Http\Adapter\Guzzle6\Client</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.bing_maps.class">_9Code\Geocoder\Provider\BingMaps</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.free_geo_ip.class">_9Code\Geocoder\Provider\FreeGeoIp</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.google_maps.class">_9Code\Geocoder\Provider\GoogleMaps</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.google_maps_business.class">_9Code\Geocoder\Provider\GoogleMapsBusiness</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.host_ip.class">_9Code\Geocoder\Provider\HostIp</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.ip_info_db.class">_9Code\Geocoder\Provider\IpInfoDb</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.yahoo.class">_9Code\Geocoder\Provider\Yahoo</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.openstreetmap.class">_9Code\Geocoder\Provider\OpenStreetMap</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.geoip.class">_9Code\Geocoder\Provider\Geoip</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.mapquest.class">_9Code\Geocoder\Provider\MapQuest</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.yandex.class">_9Code\Geocoder\Provider\Yandex</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.geo_ips.class">_9Code\Geocoder\Provider\GeoIPs</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.geo_plugin.class">_9Code\Geocoder\Provider\GeoPlugin</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.maxmind.class">_9Code\Geocoder\Provider\MaxMind</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.maxmind_binary.class">_9Code\Geocoder\Provider\MaxMindBinary</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.opencage.class">_9Code\Geocoder\Provider\OpenCage</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.cache.class">_9Code\GeocoderBundle\Provider\Cache</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.chain.class">_9Code\Geocoder\Provider\Chain</parameter>
        <parameter key="geocoder_bundle.geocoder.provider.tom_tom.class">_9Code\Geocoder\Provider\TomTom</parameter>


        <parameter key="geocoder_bundle.logger.class">_9Code\GeocoderBundle\Logger\GeocoderLogger</parameter>

        <parameter key="geocoder_bundle.data_collector.class">_9Code\GeocoderBundle\DataCollector\GeocoderDataCollector</parameter>

        <parameter key="geocoder_bundle.event_listener.fake_request.class">_9Code\GeocoderBundle\EventListener\FakeRequestListener</parameter>

        <parameter key="geocoder_bundle.dumper_manager.class">_9Code\GeocoderBundle\DumperManager</parameter>
        <parameter key="geocoder_bundle.dumper.geojson.class">_9Code\Geocoder\Dumper\GeoJson</parameter>
        <parameter key="geocoder_bundle.dumper.gpx.class">_9Code\Geocoder\Dumper\Gpx</parameter>
        <parameter key="geocoder_bundle.dumper.kmp.class">_9Code\Geocoder\Dumper\Kml</parameter>
        <parameter key="geocoder_bundle.dumper.wkb.class">_9Code\Geocoder\Dumper\Wkb</parameter>
        <parameter key="geocoder_bundle.dumper.wkt.class">_9Code\Geocoder\Dumper\Wkt</parameter>
    </parameters>

    <services>
        <service id="geocoder" alias="geocoder_bundle.geocoder" />
        <service id="geocoder_bundle.geocoder" class="%geocoder_bundle.geocoder.class%" />

        <!-- Adapters -->
        <service id="geocoder_bundle.geocoder.default_adapter" class="%geocoder_bundle.geocoder.default_adapter.class%" public="false" />

        <!-- Dumpers -->
        <service id="geocoder_bundle.dumper_manager" class="%geocoder_bundle.dumper_manager.class%">
            <argument type="collection" /><!-- Placeholder -->
        </service>
        <service id="geocoder_bundle.dumper.geojson" class="%geocoder_bundle.dumper.geojson.class%">
            <tag name="geocoder_bundle.dumper" alias="geojson" />
        </service>
        <service id="geocoder_bundle.dumper.gpx" class="%geocoder_bundle.dumper.gpx.class%">
            <tag name="geocoder_bundle.dumper" alias="gpx" />
        </service>
        <service id="geocoder_bundle.dumper.kmp" class="%geocoder_bundle.dumper.kmp.class%">
            <tag name="geocoder_bundle.dumper" alias="kmp" />
        </service>
        <service id="geocoder_bundle.dumper.wkb" class="%geocoder_bundle.dumper.wkb.class%">
            <tag name="geocoder_bundle.dumper" alias="wkb" />
        </service>
        <service id="geocoder_bundle.dumper.wkt" class="%geocoder_bundle.dumper.wkt.class%">
            <tag name="geocoder_bundle.dumper" alias="wkt" />
        </service>

         <!-- Logger -->
        <service id="geocoder_bundle.logger" class="%geocoder_bundle.logger.class%">
            <tag name="monolog.logger" channel="geocoder_bundle" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <!-- Data collector -->
        <service id="geocoder_bundle.data_collector" class="%geocoder_bundle.data_collector.class%" public="false">
            <tag name="data_collector" template="GeocoderBundle:Collector:geocoder" id="geocoder" />
            <argument type="service" id="geocoder_bundle.logger" />
        </service>

        <!-- Listener -->
        <service id="geocoder_bundle.event_listener.fake_request" class="%geocoder_bundle.event_listener.fake_request.class%">
            <argument></argument>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>
    </services>
</container>
